function handleError(e,t){try{const n=document.getElementById("noVNC_fallback_errormsg");if("ResizeObserver loop completed with undelivered notifications."===e.message)return!1;if(n.hasChildNodes())return!1;let d=document.createElement("div");if(d.classList.add("noVNC_message"),d.appendChild(document.createTextNode(e.message)),n.appendChild(d),e.filename){d=document.createElement("div"),d.className="noVNC_location";let t=e.filename;void 0!==e.lineno&&(t+=":"+e.lineno,void 0!==e.colno&&(t+=":"+e.colno)),d.appendChild(document.createTextNode(t)),n.appendChild(d)}t&&t.stack&&(d=document.createElement("div"),d.className="noVNC_stack",d.appendChild(document.createTextNode(t.stack)),n.appendChild(d)),document.getElementById("noVNC_fallback_error").classList.add("noVNC_open")}catch(e){document.write("noVNC encountered an error.")}try{document.activeElement&&document.activeElement.blur();let e="a[href], button, input, textarea, select, details, [tabindex]";document.querySelectorAll(e).forEach(e=>{e.setAttribute("tabindex","-1")})}catch(e){}return!1}window.addEventListener("error",e=>handleError(e,e.error)),window.addEventListener("unhandledrejection",e=>handleError(e.reason,e.reason));